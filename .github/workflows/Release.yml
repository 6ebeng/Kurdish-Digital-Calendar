name: Release KDC

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags (e.g., v1.0.0)
  workflow_dispatch:
    # Allows manual trigger of the workflow

jobs:
  build:
    runs-on: windows-latest
    outputs:
      version: ${{ steps.extract-version.outputs.version }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Advanced Installer
      run: choco install advanced-installer --version=21.4.0

    - name: Determine Advanced Installer Path
      id: determine-ai-path
      shell: pwsh
      run: |
        $aiPath = (Get-ChildItem 'C:\Program Files (x86)\Caphyon\' -Directory | Where-Object { $_.Name -match 'Advanced Installer' } | Select-Object -Last 1).FullName + "\bin\x86\AdvancedInstaller.com"
        Write-Host "Determined Advanced Installer Path: $aiPath"
        echo "AI_PATH=$aiPath" >> $env:GITHUB_ENV 
        $aiDir = Split-Path -Parent $aiPath
        echo "AI_DIR=$aiDir" >> $env:GITHUB_ENV

    - name: Copy Med files to AI directories
      run: |
        copy .\Meds_AI\advinst.exe "${{ env.AI_DIR }}"
        $dirPath = "C:\ProgramData\Caphyon\Advanced Installer"
        if (-not (Test-Path -Path $dirPath)) {
          New-Item -Path $dirPath -ItemType Directory
        }
        copy .\Meds_AI\Settings.AIS "C:\ProgramData\Caphyon\Advanced Installer\"
        copy .\Meds_AI\license80.dat "C:\ProgramData\Caphyon\Advanced Installer\"
        reg import .\Meds_AI\reg.reg


    - name: Extract Version from Tag
      id: extract-version
      shell: pwsh
      run: |
        $tag = git describe --tags --abbrev=0
        if ($tag -match '^(pre-v|v)([0-9]+\.[0-9]+\.[0-9](\.[0-9]+)?)$') {
          $version = $matches[2]
          Write-Host "Extracted Version: $version"
          echo "version=$version" >> $env:GITHUB_OUTPUT
        } else {
          Write-Error "Tag does not match version pattern."
          exit 1
        }

    - name: Update Installer Version
      shell: pwsh
      run: |
        $aiPath = "${{ env.AI_PATH }}"
        & $aiPath /edit "AI Setup Project/Kurdish Digital Calendar.aip" /SetVersion ${{ steps.extract-version.outputs.version }}

    - name: Build Advanced Installer project with Signing
      shell: pwsh
      run: |
        Write-Host "Using Advanced Installer Path: $env:AI_PATH"
        & $env:AI_PATH /rebuild "AI Setup Project/Kurdish Digital Calendar.aip"

    - name: Compress build artifacts
      run: |
        $zipPath = "Kurdish-Digital-Calendar-Release-SetupFiles.zip"
        Compress-Archive -Path "AI Setup Project\Kurdish Digital Calendar-Release-SetupFiles\*" -DestinationPath $zipPath

    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: Kurdish-Digital-Calendar-Release-SetupFiles.zip

  release:
    runs-on: windows-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'

    - name: Install github-changelog-generator
      run: gem install github_changelog_generator

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: .

    - name: Unzip build artifacts
      run: |
        Expand-Archive -Path Kurdish-Digital-Calendar-Release-SetupFiles.zip -DestinationPath "Kurdish-Digital-Calendar-Release-SetupFiles"

    - name: Generate Changelog
      shell: pwsh
      run: |
        $lastTag = git describe --tags --abbrev=0 HEAD^0
        $currentTag = git describe --tags --abbrev=0
        $commits = git log $lastTag..$currentTag --pretty=format:"* %s"
        Set-Content -Path CHANGELOG.md -Value "## Changelog for version $currentTag`n`n$commits"

    - name: Remove Changelog Generator Line
      shell: pwsh
      run: |
        (Get-Content CHANGELOG.md) -notmatch 'This Changelog was automatically generated by' | Set-Content CHANGELOG.md
        Write-Host "Removed generator line from CHANGELOG.md"

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1.1.4
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      with:
        tag_name: v${{ needs.build.outputs.version }}
        release_name: KDC release v${{ needs.build.outputs.version }}
        body_path: CHANGELOG.md  
        draft: false
        prerelease: false

    - name: Upload Installer
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Kurdish-Digital-Calendar-Release-SetupFiles/KDC Installer.exe
        asset_name: KDC Installer x64/x86.exe
        asset_content_type: application/octet-stream
    
    - name: Upload updates.ini
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./updates.ini
        asset_name: updates.ini
        asset_content_type: text/plain

