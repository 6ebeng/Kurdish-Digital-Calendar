name: Build and Release KDC

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags (e.g., v1.0.0)
  workflow_dispatch:
    # Allows manual trigger of the workflow

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Advanced Installer
      run: choco install advanced-installer

    - name: Determine Advanced Installer Path
      id: determine-ai-path
      shell: pwsh
      run: |
        $aiPath = (Get-ChildItem 'C:\Program Files (x86)\Caphyon\' -Directory | Where-Object { $_.Name -match 'Advanced Installer' } | Select-Object -Last 1).FullName + "\bin\x86\AdvancedInstaller.com"
        Write-Host "Determined Advanced Installer Path: $aiPath"
        echo "AI_PATH=$aiPath" >> $env:GITHUB_ENV

    - name: Extract Version from AIP File
      id: extract-version
      shell: pwsh
      run: |
        $aipPath = "AI Setup Project/Kurdish Digital Calendar.aip"
        if (Test-Path $aipPath) {
            $content = Get-Content $aipPath -Raw
            Write-Host "Content successfully read from $aipPath"

            if ($content -match 'Property="ProductVersion" Value="([0-9]+\.[0-9]+\.[0-9]+)"') {
                $version = $matches[1]
                Write-Host "Extracted Version: $version"
                echo "VERSION=$version" >> $env:GITHUB_ENV
            } else {
                Write-Error "Version not found in AIP file."
                exit 1
            }
        } else {
            Write-Error "File not found: $aipPath"
            exit 1
        }

    - name: Archive build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: ./AI Setup Project/Kurdish Digital Calendar-Release-SetupFiles

  release:
    runs-on: windows-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'

    - name: Install github-changelog-generator
      run: gem install github_changelog_generator

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
        path: ./AI Setup Project/Kurdish Digital Calendar-Release-SetupFiles

    - name: List files in artifact directory (debugging step)
      run: dir "./AI Setup Project/Kurdish Digital Calendar-Release-SetupFiles"

    - name: Generate Changelog
      shell: pwsh
      env:
        PATH: C:\hostedtoolcache\windows\ruby\3.0.0\x64\bin;${{ env.PATH }}
        PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
      run: |
        VERSION= $env:VERSION
        Write-Host "Generating changelog for version $VERSION"
        github_changelog_generator `
          --user ${{ github.repository_owner }} `
          --project ${{ github.event.repository.name }} `
          --token ${{ secrets.PAT_TOKEN }} `
          --future-release $VERSION `
          --output CHANGELOG.md

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      with:
        tag_name: "v$env:VERSION"
        release_name: "v$env:VERSION"
        body_path: CHANGELOG.md  
        draft: false
        prerelease: false

    - name: Upload Installer
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./AI Setup Project/Kurdish Digital Calendar-Release-SetupFiles/KDC Installer.exe
        asset_name: Kurdish-Digital-Calendar.exe
        asset_content_type: application/octet-stream
